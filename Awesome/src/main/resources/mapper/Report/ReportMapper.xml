<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.mapper.ReportMapper">

	<!-- 상태 코드 사전 -->
	<sql id="status_dict">
	  ( SELECT 'RECEIVED'    AS CODE, '접수'     AS LABEL FROM dual UNION ALL
	    SELECT 'REVIEWING'   AS CODE, '검토중'   AS LABEL FROM dual UNION ALL
	    SELECT 'RESOLVED'    AS CODE, '조치완료' AS LABEL FROM dual UNION ALL
	    SELECT 'IN_PROGRESS' AS CODE, '처리중'   AS LABEL FROM dual UNION ALL
	    SELECT 'DONE'        AS CODE, '조치완료' AS LABEL FROM dual UNION ALL
	    SELECT 'REJECTED'    AS CODE, '반려'     AS LABEL FROM dual
	  )
	</sql>


	    <!-- 사유 코드 사전 -->
	<sql id="reason_dict">
	  ( SELECT 'SPAM'               AS CODE, '스팸홍보/도배글입니다.'            AS LABEL FROM dual UNION ALL
	    SELECT 'OBSCENITY'          AS CODE, '음란물입니다.'                    AS LABEL FROM dual UNION ALL
	    SELECT 'INJUSTICE'          AS CODE, '불법정보를 포함하고 있습니다.'    AS LABEL FROM dual UNION ALL
	    SELECT 'HARMFUL TO YOUTH'   AS CODE, '청소년에게 유해한 내용입니다.'    AS LABEL FROM dual UNION ALL
	    SELECT 'ABUSE'              AS CODE, '욕설/생명경시/혐오/차별적 표현입니다.' AS LABEL FROM dual UNION ALL
	    SELECT 'PERSONAL INFORMATION' AS CODE, '개인정보 노출 게시물입니다.'    AS LABEL FROM dual UNION ALL
	    SELECT 'UNPLEASANT'         AS CODE, '불쾌한 표현이 있습니다.'          AS LABEL FROM dual UNION ALL
	    SELECT 'OTHER_MATTERS'      AS CODE, '기타사항'                         AS LABEL FROM dual
	  )
	</sql>
    
    <!--이 쿼리는 어디다 쓰는지 모르겠음-->
    <sql id="reason_label_sql">
    CASE UPPER(TRIM(R.REASON))
      WHEN 'SPAM'              THEN '스팸홍보/도배글입니다.'
      WHEN 'UNPLEASANT'        THEN '음란물입니다.'
      WHEN 'ILLEGAL'           THEN '불법정보를 포함하고 있습니다.'
      WHEN 'HARMFUL TO YOUTH'  THEN '청소년에게 유해한 내용입니다.'
      WHEN 'OBSCENITY'         THEN '욕설/생명경시/혐오/차별적 표현입니다.'
      WHEN 'PRIVACY'           THEN '개인정보 노출 게시물입니다.'
      WHEN 'PERSONAL_INFO'     THEN '개인정보 노출 게시물입니다.'
      WHEN 'OTHER'             THEN '기타사항 - ' || NVL(R.REASON_DETAIL, '-')
	  WHEN 'OTHERS'            THEN '기타사항 - ' || NVL(R.REASON_DETAIL, '-')
	  WHEN 'OTHER MATTERS'     THEN '기타사항 - ' || NVL(R.REASON_DETAIL, '-')
	  WHEN 'ETC'               THEN '기타사항 - ' || NVL(R.REASON_DETAIL, '-')
	  ELSE NVL(R.REASON, '-')
    END
  </sql>
    
    
    
    <!-- 어드민신고관련  resultMap -->
    <resultMap id="ReportMap" type="com.pcwk.ehr.report.domain.ReportDTO">
    <id     column="REPORT_CODE"      property="reportCode"/>
    <result column="CHAT_CODE"        property="chatCode"/>
    <result column="USER_ID"          property="userId"/>
    <result column="CT_ID"            property="ctId"/>
    <result column="REASON"           property="reason"/>
    <result column="REASON_LABEL"     property="reasonLabel"/>
    <result column="REASON_DETAIL"    property="reasonDetail"/> 
    <result column="STATUS"           property="status"/>
    <result column="REG_DT"           property="regDt"/>
    <result column="MOD_DT"           property="modDt"/>
    <!-- NEW: 신고된 채팅 정보 보관용 컬럼 매핑 -->
    <result column="TARGET_USER_ID"   property="targetUserId"/>
    <result column="TARGET_MESSAGE"   property="targetMessage"/>
    <result column="TARGET_SEND_DT"   property="targetSendDt"/>
  </resultMap>
    
    
    
    
    <!-- 신고 저장 -->
  <insert id="doSave" parameterType="com.pcwk.ehr.report.domain.ReportDTO">
    <selectKey keyProperty="reportCode" resultType="int" order="BEFORE">
      SELECT REP_SEQ.NEXTVAL FROM dual
    </selectKey>
    INSERT INTO REPORT (
      REPORT_CODE,
      CHAT_CODE,
      USER_ID,
      CT_ID,
      REASON,
      STATUS,
      REASON_DETAIL,  
      <!-- 신고된 채팅 스냅샷 보관 -->
      TARGET_USER_ID,
      TARGET_MESSAGE,
      TARGET_SEND_DT,
      REG_DT,
      MOD_DT
    ) VALUES (
      #{reportCode},
      #{chatCode},
      #{userId,jdbcType=VARCHAR},
      #{ctId,jdbcType=VARCHAR},    
      #{reason,jdbcType=VARCHAR},   
      #{status,jdbcType=VARCHAR},  
      #{reasonDetail,jdbcType=VARCHAR}, 
      #{targetUserId,jdbcType=VARCHAR},
      #{targetMessage,jdbcType=VARCHAR},
      #{targetSendDt,jdbcType=TIMESTAMP},
      SYSDATE,
      SYSDATE
    )
  </insert>

  <!--단건 조회 -->
  <select id="doSelectOne"
          parameterType="com.pcwk.ehr.report.domain.ReportDTO"
          resultType="com.pcwk.ehr.report.domain.ReportDTO">
    SELECT
      R.REPORT_CODE,
      R.CHAT_CODE,
      R.USER_ID,
      R.CT_ID,
      R.REASON,
	    CASE WHEN RD.CODE = 'OTHER_MATTERS'
	         THEN RD.LABEL || ' - ' || NVL(R.REASON_DETAIL, '-')
	         ELSE NVL(RD.LABEL, R.REASON)
	    END AS REASON_LABEL,      
	  R.REASON_DETAIL,  
      R.STATUS,
      NVL(SD.LABEL, R.STATUS) AS STATUS_LABEL,
      R.REG_DT,
      R.MOD_DT,
      R.TARGET_USER_ID,
      R.TARGET_MESSAGE,
      R.TARGET_SEND_DT
    FROM REPORT R
	  LEFT JOIN <include refid="reason_dict"/> RD
	         ON RD.CODE = UPPER(TRIM(R.REASON))
	  LEFT JOIN <include refid="status_dict"/> SD
             ON SD.CODE = UPPER(TRIM(R.STATUS))
    WHERE REPORT_CODE = #{reportCode}
    
  </select>

    
    <!-- 어드민: 신고코드로 채팅코드 조회  -->
    <select id="getChatCodeByReport" parameterType="int" resultType="int">
	  SELECT CHAT_CODE
	  FROM REPORT
	  WHERE REPORT_CODE = #{reportCode}
    </select>
    



  <!-- 신고 목록 조회 + 페이징 (ReportSearchDTO 사용) -->
  <!-- 목록 + 페이징: Stopkey(ROWNUM) 패턴 -->
<select id="doRetrieve"
        parameterType="com.pcwk.ehr.report.domain.ReportSearchDTO"
        resultMap="ReportMap">

  <bind name="kw"
        value="searchWord != null &amp;&amp; searchWord != '' ? searchWord.toUpperCase() + '%' : null"/>

  SELECT *
  FROM (
    SELECT ROWNUM AS no, x.*
    FROM (
      SELECT
        R.REPORT_CODE, R.CHAT_CODE, R.USER_ID, R.CT_ID,
        R.REASON,
        CASE WHEN RD.CODE = 'OTHER_MATTERS'
             THEN RD.LABEL || ' - ' || NVL(R.REASON_DETAIL, '-')
             ELSE NVL(RD.LABEL, R.REASON)
        END AS REASON_LABEL,
        R.REASON_DETAIL,
        R.STATUS,
        NVL(SD.LABEL, R.STATUS) AS STATUS_LABEL,
        R.REG_DT, R.MOD_DT,
        R.TARGET_USER_ID, R.TARGET_MESSAGE, R.TARGET_SEND_DT
      FROM REPORT R
      LEFT JOIN <include refid="reason_dict"/> RD
             ON RD.CODE = UPPER(TRIM(R.REASON))
      LEFT JOIN <include refid="status_dict"/> SD
             ON SD.CODE = UPPER(TRIM(R.STATUS))
      <where>
        <if test="kw != null">
          AND ( UPPER(R.USER_ID) LIKE #{kw}
             OR UPPER(R.CT_ID)   LIKE #{kw} )
        </if>
        <if test="status != null and status != ''">     AND R.STATUS    = #{status}   </if>
        <if test="chatCode != null and chatCode != 0">  AND R.CHAT_CODE = #{chatCode} </if>
        <if test="reason != null and reason != ''">     AND R.REASON    = #{reason}   </if>
        <if test="userId != null and userId != ''">     AND R.USER_ID   = #{userId}   </if>
        <if test="ctId != null and ctId != ''">         AND R.CT_ID     = #{ctId}     </if>
      </where>
      ORDER BY R.REG_DT DESC, R.REPORT_CODE DESC
    ) x
    WHERE ROWNUM &lt;= (#{pageNo} * #{pageSize})
  )
  WHERE no &gt; ((#{pageNo} - 1) * #{pageSize})
</select>

  
  
    <!-- 
    UPDATE: 신고 정보 수정
    - 필요한 컬럼만 동적으로 SET 절에 포함시킴
    - reportCode(PK)로 대상 행 지정
    - 예: 상태, 사유, 대상ID 등을 수정 가능
    -->
  <update id="doUpdate" parameterType="com.pcwk.ehr.report.domain.ReportDTO">
    UPDATE REPORT
       <set>
         <if test="chatCode != null">CHAT_CODE = #{chatCode},</if>
         <if test="userId  != null and userId != ''">USER_ID = #{userId},</if>
         <if test="ctId    != null and ctId   != ''">CT_ID   = #{ctId},</if>
         <if test="reason  != null and reason != ''">REASON = #{reason},</if>
         <if test="status  != null and status != ''">STATUS = #{status},</if>
         <if test="targetUserId   != null and targetUserId   != ''">TARGET_USER_ID = #{targetUserId},</if>
         <if test="targetMessage  != null and targetMessage  != ''">TARGET_MESSAGE = #{targetMessage},</if>
         <if test="targetSendDt   != null">TARGET_SEND_DT = #{targetSendDt,jdbcType=TIMESTAMP},</if>
         MOD_DT = SYSDATE
       </set>
     WHERE REPORT_CODE = #{reportCode}
  </update>
  

  <!-- 상태만 변경(관리자) -->
			<update id="doUpdateStatus" parameterType="map">
	  UPDATE REPORT
	     SET STATUS = #{status},
	         MOD_DT = CASE
	                    WHEN #{status} = 'RESOLVED' THEN SYSDATE
	                    ELSE MOD_DT
	                  END
	   WHERE REPORT_CODE = #{reportCode}
	</update>

  

  <delete id="doDelete" parameterType="com.pcwk.ehr.report.domain.ReportDTO">
    DELETE FROM REPORT WHERE REPORT_CODE = #{reportCode}
  </delete>
  
    <!-- 테스트 초기화 -->
  <delete id="deleteAll">
  	DELETE FROM REPORT
  </delete>
  
    <!-- 카운트 세기 -->
    <select id="getCount"  resultType="java.lang.Integer">
        SELECT count(*) totalCnt 
        FROM REPORT
    </select>
    
    <!-- 유저 별 카운트 세기 -->
    <select id="getCountById"  resultType="java.lang.Integer">
        SELECT count(*) totalCnt 
        FROM REPORT
        WHERE user_id = #{userId}
    </select>
 

  
</mapper>
